vc 14:
	- added $(QTDIR)\include to project-includes
	- added qt mainwindow
	- application builds and shows a blank window

vc 15:
	- working on getting qt to run on surface book

vc 16:
	- changed window title to "PATCHBOT v1.0"
	- experimented with qt-designer - no results though

vc 17:
	- started working with slots in qt

vc 18:
	- first test button press working

vc 19:
	- implemented a rough sketch of the main ui window

vc 20:
	- the main window layout with widget-resizing is done

vc 21:
	- revamped the ui for surface book resolution

vc 22:
	- further chagnes to ui-scaling

vc 23:
	- fixed a couple more ui issues regarding the programming panel

vc 24:
	- improved the scaling of programming and mission section

vc 25:
	- removed toolbar, menubar and progressbar from layout main_window
	- improved ui scaling

vc 26:
	- all button slots are now implemented and functional
	- minor changes to the ui
	- wrapped QApplication in main in qscopedpointer to prevent memory leaks

vc 27:
	- added some color to buttons and various other ui elements
	- layout coloring wip

vc 28:
	- layout coloring almost complete
	- scrollbar coloring still wip

vc 29:
	- finished main_window ui
	- added image resources

vc 30:
	- minor code cleanup for presentation of task 3

vc 31:
	- removed unnecessary commented code


TASK 4:
vc 32:
	- fixed a missing &
	- implemented qfiledialog to select a colony to be loaded

vc 33:
	- GameController implementation wip
	- Colonys can now be loaded into the GameController

vc: 34:
	- added paintEvent method to main_window
	- copied some code which could work for rendering the pixel map
	- rough idea on how the pixel-map will be rendered

vc 35:
	- render setup wip

vc 36:
	- new concept: gui is handling rendering while the model just provides data

vc 37:
	- added a RenderWidget inheriting from QWidget to draw the game to (wip)

vc 38:
	- first example rectangle rendered on RenderWidget!

vc 39:
	- render-widget now has a shared_ptr ref to the current gamecontroller
	- gamecontroller ref is set after creating the controller in mainwindow

vc 40: 
	-fixed qt path from M.M.'s PC

vc 41:
	-all images are loaded in the gamecontroller constructor
	-the images are stored in two vectors one for ground tiles one for robots
	-the vectors are wrapped in shared_ptr to avoid memory-leaks

vc 42:
	-render still wip
	-mostly transition commit
	-added closed and open enums for doors back in
	-one return statement missing coming in next commit

vc 43:
	-surface book branch and desktop branch conflict solved

vc 44:
	-static render working


TODO:
	-rewrite pixel & Texture to a more easily traversable data-structure
	-render tiles as QImages
	-return texture based on tile_ref
	-remove DoorTile
	-return image based on tile_Type enum object